name: Deploy-AKS

on:
  workflow_run:
    workflows:
      - CI Pipelines
    types:
      - completed
jobs:
  deploy:
    if: github.ref == 'refs/heads/main' && github.event.workflow_run.conclusion == 'success'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [ bookstore-frontend-react-app, bookstore-api-gateway-service, bookstore-eureka-discovery-service, bookstore-account-service, bookstore-billing-service, bookstore-catalog-service, bookstore-order-service, bookstore-payment-service ]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Set AKS Context
      run: az aks get-credentials --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} --name ${{ secrets.AKS_CLUSTER_NAME }}

    - name: Login to Azure Container Registry
      uses: azure/docker-login@v1
      with:
        login-server: ${{ secrets.ACR_LOGIN_SERVER }}
        username: ${{ secrets.ACR_USERNAME }}
        password: ${{ secrets.ACR_PASSWORD }}

    - name: Set AKS context
      run: az aks get-credentials --resource-group cloud-computing-gp --name bookstore-application

    - name: Wait for Image to be Available in ACR
      run: |
        IMAGE_TAG=${{ env.IMAGE_TAG }}
        for i in {1..5}; do  # 5 attempts
          az acr repository show-tags --name ${{ secrets.ACR_LOGIN_SERVER }} \
            --repository ${{ matrix.service }} --query "contains(@, '$IMAGE_TAG')" | grep true && break
          echo "Waiting for image to be available in ACR... (Attempt $i/5)"
          sleep 1  # Sleep for 1 second per attempt
        done
        
    - name: Update Kubernetes Deployment with New Image
      run: |
        kubectl set image deployment/${{ matrix.service }} \
        ${{ matrix.service }}=${{ secrets.ACR_LOGIN_SERVER }}/${{ matrix.service }}:$IMAGE_TAG

    - name: Deploy-AKS
      run: |
        kubectl apply -f ./kubernetes/postgres/postgres-manifest.yaml
        kubectl apply -f ./kubernetes/services/bookstore-consul.yaml
        kubectl apply -f ./kubernetes/services/bookstore-account-service.yaml
        kubectl apply -f ./kubernetes/services/bookstore-billing-service.yaml
        kubectl apply -f ./kubernetes/services/bookstore-catalog-service.yaml
        kubectl apply -f ./kubernetes/services/bookstore-order-service.yaml 
        kubectl apply -f ./kubernetes/services/bookstore-payment-service.yaml
        kubectl apply -f ./kubernetes/services/bookstore-api-gateway-service.yaml
        kubectl apply -f ./kubernetes/services/frontend-manifest.yaml
        kubectl apply -f ./kubernetes/services/bookstore-ingress.yaml
        kubectl apply -f ./kubernetes/monitors/prometheus-manifest.yaml
