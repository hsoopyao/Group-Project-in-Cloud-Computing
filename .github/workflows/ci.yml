name: CI Pipelines

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-commons:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        commons: [bookstore-commons, bookstore-feign]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '11'
          cache: 'maven'

      - name: Build and Install ${{matrix.commons}}
        working-directory: ${{matrix.commons}}
        run: mvn clean install -DskipTests=true

      - name: Upload ${{matrix.commons}} artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{matrix.commons}}
          path: ~/.m2/repository/com/devd/spring/${{matrix.commons}}/

  download-commons:
    needs: build-commons
    runs-on: ubuntu-latest
    strategy:
      matrix:
        commons: [bookstore-commons, bookstore-feign ]

    steps:
      - name: Download ${{matrix.commons}} artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{matrix.commons}}
          path: ~/.m2/repository/com/devd/spring/${{matrix.commons}}/

  build-services:
    needs: download-commons
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [bookstore-api-gateway-service, bookstore-eureka-discovery-service, bookstore-account-service, bookstore-billing-service, bookstore-catalog-service, bookstore-order-service, bookstore-payment-service]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '11'
          cache: 'maven'

      - name: Download ${{matrix.commons}} artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{matrix.commons}}
          path: ~/.m2/repository/com/devd/spring/${{matrix.commons}}/

      - name: Build and Test ${{ matrix.service }}
        working-directory: ${{ matrix.service }}
        run: mvn clean install -DskipTests=false

      - name: Log in to Azure Container Registry
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.ACR_LOGIN_SERVER }}
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      - name: Build and Push Docker Image
        run: |
          echo "IMAGE_TAG=$(git rev-parse --short HEAD)" >> $GITHUB_ENV
          docker build -t ${{ secrets.ACR_LOGIN_SERVER }}/${{ matrix.service }}:$IMAGE_TAG ${{ matrix.service }}
          docker push ${{ secrets.ACR_LOGIN_SERVER }}/${{ matrix.service }}:$IMAGE_TAG

      - name: Archive built artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.service }}-artifact
          path: ${{ matrix.service }}/target/*.jar
